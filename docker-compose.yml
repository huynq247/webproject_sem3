version: '3.8'

# Sử dụng file cấu hình .env
# Chỉ cần điều chỉnh file .env để thay đổi IP và port

services:
  # Backend Services
  api-gateway:
    build: ./lms_micro_services/api-gateway
    container_name: lms-api-gateway
    ports:
      - "${API_GATEWAY_PORT}:8000"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:${AUTH_SERVICE_PORT}
      - CONTENT_SERVICE_URL=http://content-service:${CONTENT_SERVICE_PORT}
      - ASSIGNMENT_SERVICE_URL=http://assignment-service:${ASSIGNMENT_SERVICE_PORT}
    networks:
      - lms-network
    depends_on:
      - auth-service
      - content-service
      - assignment-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  auth-service:
    build: ./lms_micro_services/auth-service
    container_name: lms-auth-service
    environment:
      # Sử dụng kết nối database hiện có
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - ENVIRONMENT=development
      - DEPLOYMENT_TYPE=single-server
      - SECRET_KEY=${JWT_SECRET_KEY}
      - ALGORITHM=${JWT_ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      # Thêm các biến môi trường thiếu
      - REDIS_URL=redis://lms-redis:6379/0
      - RABBITMQ_URL=amqp://guest:guest@lms-rabbitmq:5672/
      - LOCAL_IP=0.0.0.0
      - PUBLIC_IP=localhost
      - RABBITMQ_URL=amqp://guest:guest@localhost:5672/
      - LOCAL_IP=0.0.0.0
      - PUBLIC_IP=localhost
    networks:
      - lms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  content-service:
    build: ./lms_micro_services/content-service
    container_name: lms-content-service
    environment:
      # Sử dụng kết nối MongoDB hiện có
      - MONGODB_URL=${MONGODB_URL}
      - MONGODB_DB_NAME=${MONGODB_DB}
      - ENVIRONMENT=development
      - SERVICE_NAME=content-service
      - HOST=0.0.0.0
      - PORT=${CONTENT_SERVICE_PORT}
      - DEBUG=true
      - AUTH_SERVICE_URL=http://auth-service:${AUTH_SERVICE_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      # Thêm các biến môi trường thiếu
      - REDIS_URL=redis://lms-redis:6379/0
      - RABBITMQ_URL=amqp://guest:guest@lms-rabbitmq:5672/
      - LOCAL_IP=0.0.0.0
      - PUBLIC_IP=localhost
    networks:
      - lms-network
    depends_on:
      - auth-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  assignment-service:
    build: ./lms_micro_services/assignment-service
    container_name: lms-assignment-service
    environment:
      # Sử dụng kết nối database hiện có
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - AUTH_SERVICE_URL=http://auth-service:${AUTH_SERVICE_PORT}
      - CONTENT_SERVICE_URL=http://content-service:${CONTENT_SERVICE_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      # Thêm các biến môi trường thiếu
      - REDIS_URL=redis://lms-redis:6379/0
      - RABBITMQ_URL=amqp://guest:guest@lms-rabbitmq:5672/
      - LOCAL_IP=0.0.0.0
      - PUBLIC_IP=localhost
    networks:
      - lms-network
    depends_on:
      - auth-service
      - content-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Frontend Applications
  frontend-admin:
    build: ./lms_micro_services/frontend-admin
    container_name: lms-frontend-admin
    ports:
      - "${FRONTEND_ADMIN_PORT}:80"
    environment:
      - REACT_APP_API_BASE_URL=${API_GATEWAY_URL}
    # Thêm giới hạn tài nguyên để tránh lỗi OOM
    mem_limit: 4g
    mem_reservation: 2g
    networks:
      - lms-network
    depends_on:
      - api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  frontend-teacher:
    build: ./lms_micro_services/frontend-teacher
    container_name: lms-frontend-teacher
    ports:
      - "${FRONTEND_TEACHER_PORT}:80"
    environment:
      - REACT_APP_API_BASE_URL=${API_GATEWAY_URL}
    # Thêm giới hạn tài nguyên để tránh lỗi OOM
    mem_limit: 4g
    mem_reservation: 2g
    networks:
      - lms-network
    depends_on:
      - api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  frontend-student:
    build: ./lms_micro_services/frontend-student
    container_name: lms-frontend-student
    ports:
      - "${FRONTEND_STUDENT_PORT}:80"
    environment:
      - REACT_APP_API_BASE_URL=${API_GATEWAY_URL}
    # Thêm giới hạn tài nguyên để tránh lỗi OOM
    mem_limit: 4g
    mem_reservation: 2g
    networks:
      - lms-network
    depends_on:
      - api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

networks:
  lms-network:
    driver: bridge